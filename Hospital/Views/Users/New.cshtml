@model OA.DTO.Auths.UsersDTO
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="page-title-box d-flex align-items-center justify-content-between">
                    <h4>User management</h4>
                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item">Home</li>
                            <li class="breadcrumb-item">User management</li>
                            <li class="breadcrumb-item active">Add</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm("New", "Users", FormMethod.Post, new { @id = "form-new", @class = "form-horizontal needs-validation", @novalidate = "novalidate", @enctype = "multipart/form-data" }))
                {
                    <div class="mb-3 row">
                        <label class="form-label col-md-2 col-form-label" for="username">Name <sup class="text-danger">*</sup></label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "name", placeholder = "Name", @required = "" })
                            @Html.ValidationMessageFor(m => m.Name, "Required.", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="form-label col-md-2 col-form-label" for="address">Address <sup class="text-danger">*</sup></label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @id = "name", placeholder = "Address", @required = "" })
                            @Html.ValidationMessageFor(m => m.Address, "Required.", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="form-label col-md-2 col-form-label" for="phone">Phone <sup class="text-danger">*</sup></label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @id = "name", placeholder = "Phone", @required = "" })
                            @Html.ValidationMessageFor(m => m.Phone, "Required.", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="form-label col-md-2 col-form-label" for="email">Email <sup class="text-danger">*</sup></label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @id = "name", placeholder = "Email", @required = "" })
                            @Html.ValidationMessageFor(m => m.Email, "Required.", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="form-label col-md-2 col-form-label" for="password">Password <sup class="text-danger">*</sup></label>
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "name", placeholder = "Password", @required = "" })
                            @Html.ValidationMessageFor(m => m.Password, "Required.", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="form-label col-md-2 col-form-label" for="gender">Gender</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Gender,
                               new SelectList(Model.Genders, "Value", "Text", Model.Gender), null,
                               new
                               {
                                   @class = "form-control select2",
                                   @id = "GenderId",
                                   @style = "width:100%;"
                               })
                            @Html.ValidationMessageFor(model => model.Gender, "Required.", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label class="form-label col-md-2 col-form-label" for="position">Position</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Position,
                               new SelectList(Model.Positions, "Value", "Text", Model.Position), null,
                               new
                               {
                                   @class = "form-control select2",
                                   @id = "PositionId",
                                   @style = "width:100%;"
                               })
                            @Html.ValidationMessageFor(model => model.Position, "Required.", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <div class="mt-3 text-end">
                        <button class="btn btn-primary w-sm waves-effect waves-light" type="submit">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>